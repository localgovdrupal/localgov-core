<?php

/**
 * @file
 * Localgov Workflow module hooks.
 */

use Drupal\localgov_roles\RolesHelper;
use Drupal\node\NodeTypeInterface;
use Drupal\workflows\Entity\Workflow;

/**
 * Implements hook_localgov_roles_default().
 */
function localgov_workflows_localgov_roles_default(): array {
  return [
    RolesHelper::EDITOR_ROLE => [
      'add scheduled transitions node localgov_services_landing',
      'add scheduled transitions node localgov_services_page',
      'add scheduled transitions node localgov_services_sublanding',
      'reschedule scheduled transitions node localgov_services_landing',
      'reschedule scheduled transitions node localgov_services_page',
      'reschedule scheduled transitions node localgov_services_sublanding',
      'use localgov_editorial transition approve',
      'use localgov_editorial transition archive',
      'use localgov_editorial transition archived_draft',
      'use localgov_editorial transition archived_published',
      'use localgov_editorial transition create_new_draft',
      'use localgov_editorial transition publish',
      'use localgov_editorial transition reject',
      'use localgov_editorial transition submit_for_review',
      'view all scheduled transitions',
      'view any unpublished content',
      'view latest version',
      'view scheduled transitions node localgov_services_landing',
      'view scheduled transitions node localgov_services_page',
      'view scheduled transitions node localgov_services_sublanding',
    ],
    RolesHelper::AUTHOR_ROLE => [
      'add scheduled transitions node localgov_services_landing',
      'add scheduled transitions node localgov_services_page',
      'add scheduled transitions node localgov_services_sublanding',
      'reschedule scheduled transitions node localgov_services_landing',
      'reschedule scheduled transitions node localgov_services_page',
      'reschedule scheduled transitions node localgov_services_sublanding',
      'use localgov_editorial transition archive',
      'use localgov_editorial transition create_new_draft',
      'use localgov_editorial transition reject',
      'use localgov_editorial transition submit_for_review',
      'use localgov_editorial transition publish',
      'view all scheduled transitions',
      'view any unpublished content',
      'view latest version',
      'view scheduled transitions node localgov_services_landing',
      'view scheduled transitions node localgov_services_page',
      'view scheduled transitions node localgov_services_sublanding',
    ],
    RolesHelper::CONTRIBUTOR_ROLE => [
      'add scheduled transitions node localgov_services_landing',
      'add scheduled transitions node localgov_services_page',
      'add scheduled transitions node localgov_services_sublanding',
      'reschedule scheduled transitions node localgov_services_landing',
      'reschedule scheduled transitions node localgov_services_page',
      'reschedule scheduled transitions node localgov_services_sublanding',
      'use localgov_editorial transition create_new_draft',
      'use localgov_editorial transition reject',
      'use localgov_editorial transition submit_for_review',
      'view all scheduled transitions',
      'view any unpublished content',
      'view latest version',
      'view scheduled transitions node localgov_services_landing',
      'view scheduled transitions node localgov_services_page',
      'view scheduled transitions node localgov_services_sublanding',
      'use localgov_editorial transition create_new_draft',
      'use localgov_editorial transition reject',
      'use localgov_editorial transition submit_for_review',
      'view any unpublished content',
      'view latest version',
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function localgov_workflows_node_type_insert(NodeTypeInterface $node_type) {
  // Add workflow to new localgov_ node bundle with no other workflow.
  if (strpos($node_type->id(), 'localgov_') === 0) {
    $types = \Drupal::service('entity_type.bundle.info')->getBundleInfo('node');
    if (empty($types['node']['workflow'])) {
      $editorial = Workflow::load('localgov_editorial');
      $type = $editorial->getTypePlugin();
      $type->addEntityTypeAndBundle('node', $node_type->id());
      $editorial->save();
    }
  }
}
